// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/rodrigopoi/apex/service (interfaces: Provideriface)

// Package mock_provideriface is a generated GoMock package.
package mock_service

import (
	reflect "reflect"

	aws "github.com/aws/aws-sdk-go/aws"
	lambdaiface "github.com/aws/aws-sdk-go/service/lambda/lambdaiface"
	gomock "github.com/golang/mock/gomock"
)

// MockProvideriface is a mock of Provideriface interface
type MockProvideriface struct {
	ctrl     *gomock.Controller
	recorder *MockProviderifaceMockRecorder
}

// MockProviderifaceMockRecorder is the mock recorder for MockProvideriface
type MockProviderifaceMockRecorder struct {
	mock *MockProvideriface
}

// NewMockProvideriface creates a new mock instance
func NewMockProvideriface(ctrl *gomock.Controller) *MockProvideriface {
	mock := &MockProvideriface{ctrl: ctrl}
	mock.recorder = &MockProviderifaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockProvideriface) EXPECT() *MockProviderifaceMockRecorder {
	return m.recorder
}

// NewService mocks base method
func (m *MockProvideriface) NewService(arg0 *aws.Config) lambdaiface.LambdaAPI {
	if m.ctrl == nil {
		return nil
	}

	ret := m.ctrl.Call(m, "NewService", arg0)
	ret0, _ := ret[0].(lambdaiface.LambdaAPI)
	return ret0
}

// NewService indicates an expected call of NewService
func (mr *MockProviderifaceMockRecorder) NewService(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewService", reflect.TypeOf((*MockProvideriface)(nil).NewService), arg0)
}
